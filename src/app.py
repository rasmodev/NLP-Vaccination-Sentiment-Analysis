# -*- coding: utf-8 -*-
"""app.py

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1SKjRNc67_9TZPKUGhtfiYMfcpZuMh6s0
"""

# Commented out IPython magic to ensure Python compatibility.
# %pip install gradio transformers -q

import gradio as gr
import torch
from transformers import AutoTokenizer, AutoModelForSequenceClassification
from scipy.special import softmax

# Load the tokenizer and model from Hugging Face
model_path = "rasmodev/Covid-19_Sentiment_Analysis_RoBERTa_Model"
tokenizer = AutoTokenizer.from_pretrained(model_path)
model = AutoModelForSequenceClassification.from_pretrained(model_path)

# Preprocess text (username and link placeholders)
def preprocess(text):
    new_text = []
    for t in text.split(" "):
        t = '@user' if t.startswith('@') and len(t) > 1 else t
        t = 'http' if t.startswith('http') else t
        new_text.append(t)
    return " ".join(new_text)

# Perform sentiment analysis
def sentiment_analysis(text):
    text = preprocess(text)

    # Tokenize input text
    inputs = tokenizer(text, return_tensors='pt')

    # Forward pass through the model
    with torch.no_grad():
        outputs = model(**inputs)

    # Get predicted probabilities
    scores_ = outputs.logits[0].detach().numpy()
    scores_ = softmax(scores_)

    # Define labels and corresponding colors
    labels = ['Negative', 'Neutral', 'Positive']
    colors = ['red', 'yellow', 'green']
    font_colors = ['black', 'black', 'white']

    # Find the label with the highest percentage
    max_label = labels[scores_.argmax()]
    max_percentage = scores_.max() * 100

    # Create HTML for the label with the specified style
    label_html = f'<div style="display: flex; justify-content: center;"><button style="text-align: center; font-size: 16px; padding: 10px; border-radius: 15px; background-color: {colors[labels.index(max_label)]}; color: {font_colors[labels.index(max_label)]};">{max_label}</button></div>'

    return label_html

# Create a Gradio interface with a submit button
interface = gr.Interface(
    fn=sentiment_analysis,
    inputs=gr.Textbox(placeholder="Write your tweet here..."),
    outputs=gr.HTML(),
    title="COVID-19 Sentiment Analysis App",
    description="This App Analyzes the sentiment of COVID-19 related tweets. Negative: Indicates a negative sentiment, Neutral: Indicates a neutral sentiment, Positive: Indicates a positive sentiment.",
    theme="default",
    layout="vertical",
    examples=[["The Vaccine is Good I have had no issues!"]],
    custom_css="""body { background-color: #f5f5f5; }"""
)

# Launch the Gradio app
interface.launch()

